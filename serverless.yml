service: crud-users

provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action: "dynamodb:*"
          Resource: { "Fn::GetAtt": ["usersTable", "Arn"] }

plugins:
  - serverless-offline
  - serverless-dynamodb

package:
  individually: true
  patterns:
    - '!*/**'
    - 'node_modules/uuid/**'

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  get-users:
    handler: functions/getUsers/handler.getUsers
    package:
      patterns:
        - 'functions/getUsers/handler.js'
    events:
      - http:
          path: users/{id}
          method: GET
  get-all-users:
    handler: functions/getAllUsers/handler.getAllUsers
    package:
      patterns:
        - 'functions/getAllUsers/handler.js'
    events:
      - http:
          path: users/all
          method: GET
  create-users:
    handler: functions/createUsers/handler.createUsers
    package:
      patterns:
        - 'functions/createUsers/handler.js'
    events:
      - http:
          path: users
          method: POST
  update-users:
    handler: functions/updateUsers/handler.updateUsers
    package:
      patterns:
        - 'functions/updateUsers/handler.js'
    events:
      - http:
          path: users/{id}
          method: PATCH
  delete-users:
    handler: functions/deleteUsers/handler.deleteUsers
    package:
      patterns:
        - 'functions/deleteUsers/handler.py'
    runtime: python3.8
    events:
      - http:
          path: users/{id}
          method: DELETE

resources:
  Resources:
    usersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: usersTable
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
